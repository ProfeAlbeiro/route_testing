
TUTORIAL PHPUNIT TESTING: https://www.youtube.com/playlist?list=PLRHPC9shBXl3DUiljoV5OZ2G4Xm8wAUbG

_____________________________________________________________________________________

-- VÍDEO 01: Introducción a PHPUnit
_____________________________________________________________________________________

01. Descargar e Instalar composer desde: https://getcomposer.org/download/
02. Crear la carpeta raíz 'exs01_php_test_calculator' del proyecto en: C:\xampp\htdocs\
03. Abrir la carpeta raíz con Visual Studio Code
04. Abrir una terminal: ctrl + ñ
05. Identificar la version de composer y php: composer --version
06. Limpiar la terminal: cls (o 'clear' en el bash)
07. Crear los directorios del proyecto:
   -- src
   -- tests
      -- integration
      -- unit
08. Ir al directorio 'test' (powershell): cd .\tests\
09. Descargar phpunit (powershell): wget -O phpunit.phar https://phar.phpunit.de/phpunit-10.phar; quedará como sigue:
   -- src
   -- tests
      -- integration
      -- unit
      -- phpunit.phar
10. Ver todas las carpetas y archivos: ls
11. Ver la versión de phpunit.phar (powershell): php phpunit.phar --version
12. Ver la versión de phpunit.phar (bash): ./phpunit.phar --version
13. Hacer que el PHAR sea ejecutable (bash): chmod +x phpunit.phar
14. Ejecutar: ./phpunit.phar

_____________________________________________________________________________________

-- VÍDEO 02: Mi primera prueba con PHPUnit
_____________________________________________________________________________________

15. Crear en la carpeta 'unit' el archivo 'StackTest.php', con el siguiente código

      <?php declare(strict_types=1);

         use PHPUnit\Framework\TestCase;

         final class StackTest extends TestCase{

            public function test_sumar(): void {

                  $num1 = 1;
                  $num2 = 2;

                  // Comprobaciones de afirmaciones
                  $this->assertSame(3, $num1 + $num2);

            }

         }


16. Ejecutar la prueba: ./phpunit.phar ./
17. Probar un solo caso de prueba: ./phpunit.phar ./unit/StackTest.php

_____________________________________________________________________________________

-- VÍDEO 03: Atributos útiles de PHPUnit
_____________________________________________________________________________________

18. Integrar y aplicar el atributo 'Test' a 'StackTest.php', para evitar usar la
    palabra 'test' antes del método de prueba, quedando de la siguiente forma:

         <?php declare(strict_types=1);

         use PHPUnit\Framework\Attributes\Test;
         use PHPUnit\Framework\TestCase;

         final class StackTest extends TestCase{

            #[Test]
            public function sumar(): void {

                  $num1 = 1;
                  $num2 = 2;

                  // Comprobaciones de afirmaciones
                  $this->assertSame(3, $num1 + $num2);

            }

         }

19. Ejecutar la prueba: ./phpunit.phar ./
20. Integrar y aplicar el atributo 'TestDox' a 'StackTest.php', para comentar el
    método de prueba, quedando de la siguiente forma:

         <?php declare(strict_types=1);

         use PHPUnit\Framework\Attributes\Test;
         use PHPUnit\Framework\Attributes\TestDox;
         use PHPUnit\Framework\TestCase;

         final class StackTest extends TestCase{

            #[TestDox('Suma de dos números Enteros')]
            #[Test]
            public function sumar(): void {

                  $num1 = 1;
                  $num2 = 2;

                  // Comprobaciones de afirmaciones
                  $this->assertSame(3, $num1 + $num2);

            }

         }

21. Ejecutar la prueba: ./phpunit.phar --testdox ./unit/StackTest.php
22. Integrar y aplicar el atributo 'DataProvider' a 'StackTest.php', para aplicar al método
    de prueba un método que recibe varios valores (por arreglo), quedando de la siguiente forma:

         <?php declare(strict_types=1);

         use PHPUnit\Framework\Attributes\Test;
         use PHPUnit\Framework\Attributes\TestDox;
         use PHPUnit\Framework\Attributes\DataProvider;
         use PHPUnit\Framework\TestCase;

         final class StackTest extends TestCase {

            #[DataProvider('dataProvider')]
            #[TestDox('Al Sumar el $num1 con $num2 el resultado es $expected')]
            #[Test]
            public function sumar(int $expected, int $num1, int $num2): void {

               // Comprobaciones de afirmaciones
               $this->assertSame($expected, $num1 + $num2);
            }

            public static function dataProvider(){

               return [
                     'data set 1' => [0, 0, 0],
                     'data set 2' => [1, 0, 1],
                     'data set 3' => [1, 1, 0],
                     'data set 4' => [3, 1, 1]
               ];

            }

         }

23. Ejecutar la prueba: ./phpunit.phar --testdox ./unit/StackTest.php

_____________________________________________________________________________________

-- VÍDEO 04: Configurando PHPUnit xml
_____________________________________________________________________________________

24. Crear el archivo 'phpunit.xml' en la carpeta 'tests', de la siguiente forma:

            <?xml version="1.0" encoding="UTF-8"?>
            <phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                     xsi:noNamespaceSchemaLocation="https://schema.phpunit.de/|version|/phpunit.xsd">
               <testsuites>
                  <testsuite name="unit">
                        <directory phpVersion="8.2.12" phpVersionOperator=">=">unit</directory>
                  </testsuite>

                  <testsuite name="integration">
                        <directory phpVersion="8.2.12" phpVersionOperator=">=">integration</directory>
                  </testsuite>
               </testsuites>
            </phpunit>

25. Ejecutar la prueba: ./phpunit.phar --testdox